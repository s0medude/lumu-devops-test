user nginx;
worker_processes auto;
pid /tmp/nginx.pid;
pcre_jit on;
error_log /var/​log​/nginx/error.log warn;

events {   
    worker_connections  1024;
}

http {   
    include /etc/nginx/mime.types;   
    default_type application/json;   
    server_tokens off;   
    client_max_body_size 0;   
    log_format  main  ​'$remote_addr - $remote_user [$time_local] "$request" '​
                        '$status $body_bytes_sent "$http_referer" '​
                        '"$http_user_agent" "$http_x_forwarded_for"'​;
    access_log /var/​log​/nginx/access.log  main;
    sendfile       on;   
    tcp_nopush     on;   
    tcp_nodelay    on;   
    keepalive_timeout  65;   
    
    upstream app_server {
        # fail_timeout=0 means we always retry an upstream even if it failed
        # to return a good HTTP response

        # for UNIX domain socket setups
        server unix:/tmp/gunicorn.sock fail_timeout=0;

    }

    server {
        # It is not the right port, change it for 9180 to 9000    
        listen 8080;     
        # if no Host match, close the connection to prevent host spoofing
        return 444;  
        charset utf-8;
       
       location @proxy_to_app {       
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;    
            proxy_pass http://app_server:9000;       
        }

        error_page 500 502 503 504 /500.html;
        location = /500.html {
            root /path/to/app/current/public;
        }   
    }
}